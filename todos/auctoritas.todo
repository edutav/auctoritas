Version v0.1.0:
    Create database structure
    ✔ Create a docker compose file and its database image configuration. @2h @started(24-11-08 10:43) @done(24-11-08 11:31) @lasted(48m55s)
    ✔ Create a .env file with database configuration. @0.5h @started(24-11-08 11:32) @done(24-11-08 11:49) @lasted(17m33s)
    ✔ Create a .gitignore file. @0.5h @started(24-11-08 11:49) @done(24-11-08 12:28) @lasted(39m10s)
    ✔ Create a auctoritas.todo file. @2h @started(24-11-08 12:28) @done(24-11-08 14:35) @lasted(2h7m57s)
    ✔ Create a README.md file. @0.5h @started(24-11-08 14:36) @done(24-11-08 16:12) @lasted(1h36m7s)
    ✔ Create a config.yaml file. @0.5h @started(24-11-08 16:12) @done(24-11-08 16:34) @lasted(22m9s)
    ✔ Create a auctoritas.http file. @0.5h @started(24-11-08 16:34) @done(24-11-08 16:46) @lasted(12m47s)
    ✔ Generate a go.mod file. @0.5h @started(24-11-08 16:46) @done(24-11-08 16:49) @lasted(3m50s)
    ✔ Create a database structure. @2h @started(24-11-08 16:49) @done(24-11-08 17:04) @lasted(15m59s)

    Implement pre-registration feature.
    ☐ Create entry verification entity.
    ☐ Create user entity.
    ☐ Implement user repository.
    ☐ Implement user use case.
    ☐ Implement pre-registration handler.

    Implement registration feature.
    ☐ Implement function that updates user verification.
    ☐ Implement user verification use case.
    ☐ Implement user verification handler.

    Implement login feature.
    ☐ Implement function to verify user in database.
    ☐ Implement use case for creating user jwt.
    ☐ Implement user login handler.

    Feture para ativar o usuário.
    ☐ Atualizar tabela de verificação para true (usuário verificado). 
    ☐ Caso seja válido, ativar o usuário. 
    ☐ Caso não seja regerar um novo OTP code e enviar para o e-mail do usuário. 
    ☐ Verificar se o OTP code é válido. 
    ☐ Capturar OTP code e e-mail fornecido pelo usuário. 
    ☐ Ativar usuário por OTP code, enviado para o email do usuário. 
  